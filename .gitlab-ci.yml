stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-stage: # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - build
  image: docker:20.10.16
  #services:
  # - dind
  variables:
    address: 'http://130.185.76.168:10080/repository'
    DOCKER_TLS_CERTDIR: '/certs'
    Environment: 'Production'
  before_script:
    # - IMAGE_ID=$(docker images -q basic)
    # - if docker images | grep -q basicinfo; then docker rmi -f basicinfo; fi
    - docker login http://130.185.76.168:10080/repository/ -u devops -p $passnexus

  script:
    - echo "Compiling the code..."
    - echo "Compile complete."
    - echo $Environment
    - export Environment=$Environment
    - docker build --build-arg Environment=$Environment -t frontend . -f ./Dockerfile
    - docker tag frontend:latest 130.185.76.168:10080/repository/DGB/frontend:latest
    - docker push 130.185.76.168:10080/repository/DGB/frontend:latest
  only:
    - develop
# unit-test-job:   # This job runs in the test stage.
#   stage: test    # It only starts when the job in the build stage completes successfully.
#   script:
#     - echo "Running unit tests... This will take about 60 seconds."
#     - sleep 60
#     - echo "Code coverage is 90%"

# lint-test-job:   # This job also runs in the test stage.
#   stage: test    # It can run at the same time as unit-test-job (in parallel).
#   tags:
#       - build
#   script:
#     - echo "Linting code... This will take about 10 seconds."
#     - sleep 10
#     - echo "No lint issues found."

deploy-job: # This job runs in the deploy stage.
  tags:
    - deploy
  stage: deploy # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - kubectl rollout restart deployment frontend
    - echo "Application successfully deployed."
  only:
    - develop
